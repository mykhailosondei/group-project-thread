{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet SignUpPageComponent = class SignUpPageComponent {\n  constructor() {\n    this.passType = \"password\";\n    this.repeatPassType = \"password\";\n    this.isText = false;\n    this.isTextRepeatPass = false;\n    this.eyeIcon = \"fa-eye-slash\";\n    this.repeatEyeIcon = \"fa-eye-slash\";\n    this.password = \"312\";\n    this.repeatedPassword = \"33\";\n    this.passwordsMatch = false;\n    this.selectedDay = null;\n    this.days = [];\n    this.selectedYear = null;\n    this.years = [];\n    this.selectedMonth = null;\n    this.months = [{\n      value: 1,\n      name: 'January'\n    }, {\n      value: 2,\n      name: 'February'\n    }, {\n      value: 3,\n      name: 'March'\n    }, {\n      value: 4,\n      name: 'April'\n    }, {\n      value: 5,\n      name: 'May'\n    }, {\n      value: 6,\n      name: 'June'\n    }, {\n      value: 7,\n      name: 'July'\n    }, {\n      value: 8,\n      name: 'August'\n    }, {\n      value: 9,\n      name: 'September'\n    }, {\n      value: 10,\n      name: 'October'\n    }, {\n      value: 11,\n      name: 'November'\n    }, {\n      value: 12,\n      name: 'December'\n    }];\n    // Generate an array of days (1 to 31) and populate the 'days' property\n    for (let i = 1; i <= 31; i++) {\n      this.days.push(i);\n    }\n    for (let i = 2023; i >= 1904; i--) {\n      this.years.push(i);\n    }\n  }\n  ngOnInit() {}\n  hideShowPass() {\n    this.isText = !this.isText;\n    this.isText ? this.eyeIcon = \"fa-eye\" : this.eyeIcon = \"fa-eye-slash\";\n    this.isText ? this.passType = \"text\" : this.passType = \"password\";\n  }\n  hideShowRepeatPass() {\n    this.isTextRepeatPass = !this.isTextRepeatPass;\n    this.isTextRepeatPass ? this.repeatEyeIcon = \"fa-eye\" : this.repeatEyeIcon = \"fa-eye-slash\";\n    this.isTextRepeatPass ? this.repeatPassType = \"text\" : this.repeatPassType = \"password\";\n  }\n  checkPasswordMatch() {\n    const passwordInput = this.password;\n    const repeatPasswordInput = this.repeatedPassword;\n    this.passwordsMatch = passwordInput === repeatPasswordInput;\n  }\n  updateDates() {\n    let daysInMonth = 0;\n    if (this.selectedYear !== null && this.selectedMonth !== null) {\n      daysInMonth = new Date(this.selectedYear, this.selectedMonth, 0).getDate();\n      // Now you can safely use daysInMonth\n    } else if (this.selectedYear !== null || this.selectedMonth !== null) {\n      daysInMonth = 31;\n    } else {\n      // Handle the case where either selectedYear or selectedMonth is null\n      console.error('selectedYear or selectedMonth is null.');\n    }\n    this.days = [];\n    for (let i = 1; i <= daysInMonth; i++) {\n      this.days.push(i);\n    }\n  }\n};\nSignUpPageComponent = __decorate([Component({\n  selector: 'app-sign-up-page',\n  templateUrl: './sign-up-page.component.html',\n  styleUrls: ['./sign-up-page.component.scss']\n})], SignUpPageComponent);\nexport { SignUpPageComponent };","map":{"version":3,"mappings":"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","names":["Component","SignUpPageComponent","constructor","value","name","i","days","push","years","ngOnInit","hideShowPass","isText","eyeIcon","passType","hideShowRepeatPass","isTextRepeatPass","repeatEyeIcon","repeatPassType","checkPasswordMatch","passwordInput","password","repeatPasswordInput","repeatedPassword","passwordsMatch","updateDates","daysInMonth","selectedYear","selectedMonth","Date","getDate","console","error","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\mrsem\\group-project-thread\\group-project-thread\\ClientApp\\src\\app\\Components\\sign-up-page\\sign-up-page.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-sign-up-page',\n  templateUrl: './sign-up-page.component.html',\n  styleUrls: ['./sign-up-page.component.scss']\n})\nexport class SignUpPageComponent {\n  passType: string = \"password\";\n  repeatPassType: string = \"password\";\n  isText: boolean = false;\n  isTextRepeatPass: boolean = false;\n  eyeIcon: string = \"fa-eye-slash\";\n  repeatEyeIcon: string = \"fa-eye-slash\";\n  password: string = \"312\";\n  repeatedPassword: string = \"33\";\n  passwordsMatch: boolean = false;\n  selectedDay: number | null = null;\n  days: number[] = [];\n  selectedYear: number | null = null;\n  years: number[] = [];\n  selectedMonth: number | null = null;\n  months: { value: number; name: string }[] = [\n    { value: 1, name: 'January' },\n    { value: 2, name: 'February' },\n    { value: 3, name: 'March' },\n    { value: 4, name: 'April' },\n    { value: 5, name: 'May' },\n    { value: 6, name: 'June' },\n    { value: 7, name: 'July' },\n    { value: 8, name: 'August' },\n    { value: 9, name: 'September' },\n    { value: 10, name: 'October' },\n    { value: 11, name: 'November' },\n    { value: 12, name: 'December' }\n  ];\n\n  constructor() {\n    // Generate an array of days (1 to 31) and populate the 'days' property\n    for (let i = 1; i <= 31; i++) {\n      this.days.push(i);\n    }\n    for (let i = 2023; i>=1904;i--){\n      this.years.push(i);\n    }\n  }\n  ngOnInit() : void{\n\n  }\n  \n  hideShowPass(){\n    this.isText = !this.isText;\n    this.isText ? this.eyeIcon = \"fa-eye\" : this.eyeIcon = \"fa-eye-slash\";\n    this.isText ? this.passType = \"text\" : this.passType = \"password\";\n  }\n\n  hideShowRepeatPass(){\n    this.isTextRepeatPass = !this.isTextRepeatPass;\n    this.isTextRepeatPass ? this.repeatEyeIcon = \"fa-eye\" : this.repeatEyeIcon = \"fa-eye-slash\";\n    this.isTextRepeatPass ? this.repeatPassType = \"text\" : this.repeatPassType = \"password\";\n  }\n\n  checkPasswordMatch() {\n    const passwordInput = this.password;\n    const repeatPasswordInput = this.repeatedPassword;\n\n    this.passwordsMatch = passwordInput === repeatPasswordInput;\n  }\n\n  updateDates(){\n    let daysInMonth: number = 0;\n    if (this.selectedYear !== null && this.selectedMonth !== null) {\n      daysInMonth = new Date(this.selectedYear, this.selectedMonth, 0).getDate();\n      // Now you can safely use daysInMonth\n    } \n    else if(this.selectedYear !== null || this.selectedMonth !== null){\n      daysInMonth = 31;\n    }\n    else {\n      // Handle the case where either selectedYear or selectedMonth is null\n      console.error('selectedYear or selectedMonth is null.');\n    }\n    this.days = [];\n    for (let i = 1; i <= daysInMonth; i++) {\n    this.days.push(i);\n}\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}