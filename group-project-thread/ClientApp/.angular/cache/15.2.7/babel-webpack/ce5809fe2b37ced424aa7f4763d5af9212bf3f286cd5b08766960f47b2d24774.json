{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class EventService {\n  userChanged(user) {\n    this.onUserChanged.next(user);\n  }\n  constructor() {\n    this.onUserChanged = new Subject();\n    this.userChangedEvent$ = this.onUserChanged.asObservable();\n  }\n}\nEventService.ɵfac = function EventService_Factory(t) {\n  return new (t || EventService)();\n};\nEventService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EventService,\n  factory: EventService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,OAAO,QAAQ,MAAM;;AAM9B,OAAM,MAAOC,YAAY;EAIhBC,WAAW,CAACC,IAAoB;IACrC,IAAI,CAACC,aAAa,CAACC,IAAI,CAACF,IAAI,CAAC;EAC/B;EAEAG;IAPQ,kBAAa,GAAG,IAAIN,OAAO,EAAkB;IAC9C,sBAAiB,GAAG,IAAI,CAACI,aAAa,CAACG,YAAY,EAAE;EAM5C;;AARLN,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAO,SAAZP,YAAY;EAAAQ,YAFX;AAAM","names":["Subject","EventService","userChanged","user","onUserChanged","next","constructor","asObservable","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\mrsem\\group-project-thread\\group-project-thread\\ClientApp\\src\\app\\Services\\event.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { UserDTO } from '../models/userDTO';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  private onUserChanged = new Subject<UserDTO | null>();\n  public userChangedEvent$ = this.onUserChanged.asObservable();\n\n  public userChanged(user: UserDTO | null) : void {\n    this.onUserChanged.next(user);\n  }\n\n  constructor() { }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}